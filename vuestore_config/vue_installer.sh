#!/bin/bash

echo "Installing and Configuring Nginx yarn and nodejs"

apt-get update
apt-get install curl
apt-get install git

curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt-get install -y nodejs
npm install -g yarn



apt-get install openjdk-8-jre -y


apt-get install imagemagick -y
apt-get install nginx -y

echo "Configartion file path /etc/nginx/nginx.conf"
echo "checking configuration is OK run.."
sudo nginx -t

echo "Add configurations in /etc/nginx/site-available/default"

echo "
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {

                proxy_pass http://localhost:3000/;
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                #try_files $uri $uri/ =404;
        }
        location /api/{
                proxy_pass http://localhost:8080/api/;
        }
        location /assets/ {
        proxy_pass http://localhost:3000/assets/;
        }
        location /img/ {
        proxy_pass http://localhost:8080/img/;
        }


        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}
"
echo "cd /var/www/html"
echo "git clone https://github.com/DivanteLtd/vue-storefront.git
git clone https://github.com/DivanteLtd/vue-storefront-api.git"
echo "Rename vue-storefornt ---> vuestorefront"
echo "Rename vue-storefront-api ---> vuestorefront-api"
echo "install yarn in both directories"
echo "Copying cp /var/www/html/vuestorefront/config/default.json /var/www/html/vuestorefront/config/local.json"
echo "Copying cp /var/www/html/vuestorefront-api/config/default.json /var/www/html/vuestorefront-api/config/local.json"
echo "Edit /var/www/html/vuestorefront-api/config/local.json
---->   Edit URL & TOKENS created from adminpanel in integration section"
echo "Check API Version in vuestorefront-api/config/local.json should be 7.1 not 5.6"